#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

// Layer Definitions
#define QWERTY 0
#define COLEMAK 1
#define GAMING_COLEMAK 2
#define GAMING_QWERTY 3
#define LAYERS 4
#define NAV 5
#define MOUSE 6
#define MEDIA 7
#define NUM 8
#define SYM 9
#define FN 10
#define MACRO 11

// Behavior configuration
&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};
&sk {
    release-after-ms = <500>;
    quick-release;
};

/ {

gqt: global-quick-tap {
    compatible = "zmk,behavior-hold-tap";
    label = "GLOBAL_QUICK_TAP";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
};

behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {

       
        screen_sht: screen_sht {
            label = "screen_sht";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LGUI>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT &kp LGUI>
                ;
        };
       
    move_win: move_win {
            label = "move_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LALT>
                , <&macro_tap &kp M>
                ;
        };

       

        next_desktop: next_desktop {
            label = "next_desktop";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LCTRL>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LGUI &kp LCTRL>
                ;
        };
        prev_desktop: prev_desktop {
            label = "prev_desktop";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LCTRL>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LGUI &kp LCTRL>
                ;
        };
        CTRL_ALT_DEL: CTRL_ALT_DEL {
            label = "CTRL_ALT_DEL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT &kp LCTRL>
                , <&macro_tap &kp DEL>
                , <&macro_release &kp LALT &kp LCTRL>
                ;
        };

        // microsoft onenote past
        onenote_paste: onenote_paste {
            label = "onenote_paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_wait_time 300>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                , <&macro_wait_time 200>
                , <&macro_tap &kp SPACE &kp TAB>
                , <&macro_press &kp LGUI>
                , <&macro_tap &kp V>
                , <&macro_wait_time 500>
                , <&macro_release &kp LGUI>
                , <&macro_wait_time 200>
                , <&macro_tap &kp DOWN>
                //, <&macro_tap &kp DOWN>
                , <&macro_tap &kp RET>
                ;
        };

        //fact application macro
         ft_a4_scrn_sht: ft_a4_scrn_sht {
            label = "ft_a4_scrn_sht";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
             = <&macro_press &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp P>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp TAB &kp TAB &kp TAB &kp DOWN &kp DOWN &kp TAB &kp TAB &kp RET>
                , <&macro_wait_time 2200>
                , <&macro_press &kp LSHFT &kp LGUI>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT &kp LGUI>
                ;
        };

        ft_proc: ft_proc {
            label = "ft_proc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp U>
                , <&macro_release &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp RET>
                ;
        };
        ft_edit: ft_edit_doc {
            label = "ft_edit_doc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings= <&macro_tap &kp F6 &kp RET>;
        };
        ft_tri_close: tri_close {
            label = "ft_tri_close";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp F4>
                , <&macro_release &kp LALT>
                , <&macro_wait_time 350>
                //, <&macro_press &kp LALT>
                //, <&macro_tap &kp F4>
                //, <&macro_release &kp LALT>
                //, <&macro_wait_time 350>
                //, <&macro_press &kp LALT>
                //, <&macro_tap &kp F4>
                //, <&macro_release &kp LALT>
                , <&macro_tap &kp ESC &kp ESC &kp ESC>
                ;
        };
        //FACT PRINT DIALOG
        ft_print: ft_print {
            label = "ft_print";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LCTRL>
                , <&macro_tap &kp P>
                , <&macro_release &kp LSHFT &kp LCTRL>;
        };
        //WAREHOUSE QATTAN - FACT PRINT DIALOG
        print_wq: print_wq {
            label = "print_wq";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&macro_tap &kp RET>                
                , <&macro_tap &kp TAB &kp RIGHT &kp RET &kp LBKT &kp DOWN>;
        };
        //WAREHOUSE FURNITURE - FACT PRINT DIALOG
         print_wf: print_wf {
            label = "print_wf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RET>                
                , <&macro_tap &kp TAB &kp RIGHT &kp RET &kp LBKT>;
        };
        //SHOP QATTAN - FACT PRINT DIALOG
         print_sq: print_sq {
            label = "print_sq";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RET>                 
                , <&macro_tap &kp TAB &kp RIGHT &kp RET &kp KP_N0>;
        };
        //SHOP FURNITURE - FACT PRINT DIALOG
         print_sf: print_sf {
            label = "print_sf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = //<&macro_press &kp LSHFT &kp LCTRL>
                //, <&macro_tap &kp P>
                //, <&macro_release &kp LSHFT &kp LCTRL>
                //, <&macro_wait_time 1500>
                 <&macro_tap &kp RET>
                //, <&macro_wait_time 200>
                , <&macro_tap &kp TAB &kp RIGHT &kp RET &kp BSLH>;
        };
    };
};

// Keymap configuration (Colemak-DHm)
/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty {
// -----------------------------------------------------------------------------------------------------------------------------
// |        |   Q    |   W    |     E     |     R     |     T     | # |     Y     |     U    |    I    |    O   |   P    |     |
// | LAYERS | A/LGUI | S/LALT |  D/LCTRL  |  F/LSHFT  |     G     | # |     H     | J/LSHFT  | K/LCTRR | L/LALT | ;/LGUI |     |
// |        |   Z    | X/RALT |     C     |     V     |     B     | # |     N     |     M    |    ,    | ./RALT |   /    |     |
//                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&trans      &kp Q       &kp W       &kp E          &kp R          &lt LAYERS T         &kp Y          &kp U           &kp I          &kp O         &kp P          &trans
&mo LAYERS  &mt LGUI A  &mt LALT S  &mt LCTRL D    &mt LSHFT F    &kp G                &kp H          &mt LSHFT J     &mt LCTRL K    &mt LALT L    &mt LGUI SEMI  &trans
&trans      &kp Z       &mt RALT X  &kp C          &kp V          &kp B                &kp N          &lt MACRO M     &kp COMMA       &mt RALT DOT  &kp FSLH       &trans
                                    &lt MEDIA ESC  &lt NAV SPACE  &lt MOUSE TAB        &lt SYM ENTER  &lt NUM BSPC    &lt FN DEL
            >;
        };

         colemak {
// -----------------------------------------------------------------------------------------------------------------------------
// |        |   Q    |   W    |     F     |     P     |     B     | # |     J     |    L     |    U    |    Y   |   '    |     |
// | LAYERS | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT  |     G     | # |     M     | N/LSHFT  | E/LCTRL | I/LALT | O/LGUI |     |
// |        |   Z    | X/RALT |     C     |     D     |     V     | # |     K     |    H     |    ,    | ./RALT |   /    |     |
//                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |


            bindings = <
&trans      &kp Q       &kp W       &kp F          &kp P          &lt LAYERS B         &kp J          &kp L         &kp U          &kp Y         &kp SQT     &trans
&mo LAYERS  &mt LGUI A  &mt LALT R  &mt LCTRL S    &mt LSHFT T    &kp G                &kp M          &mt LSHFT N   &mt LCTRL E    &mt LALT I    &mt LGUI O  &trans
&trans      &kp Z       &mt RALT X  &kp C          &kp D          &kp V                &kp K          &kp H         &kp COMMA       &mt RALT DOT  &kp FSLH    &trans
                                    &lt MEDIA ESC  &lt NAV SPACE  &lt MOUSE TAB        &lt SYM ENTER  &lt NUM BSPC  &lt FN DEL
            >;
        };

        gaming_qwerty {
// ----------------------------------------------------------------------------------------------------
// |        |   Q   |   W   |   E   |   R   |   T   | # |   Y   |   U   |   I   |   O   |   P   |     |
// | LAYERS |   A   |   S   |   D   |   F   |   G   | # |   H   |   J   |   K   |   L   |   ;   |     |
// |        |   Z   |   X   |   C   |   V   |   B   | # |   N   |   M   |   ,   |   .   |   /   |     |
//                          |  ESC  | SPACE |  TAB  | # | ENTER | BSPC  |  DEL  |

            bindings = <
&trans      &kp Q  &kp W  &kp E    &kp R      &lt LAYERS T   &kp Y      &kp U     &kp I     &kp O    &kp P     &trans
&mo LAYERS  &kp A  &kp S  &kp D    &kp F      &kp G          &kp H      &kp J     &kp K     &kp L    &kp SEMI  &trans
&trans      &kp Z  &kp X  &kp C    &kp V      &kp B          &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &trans
                          &kp ESC  &kp SPACE  &kp TAB        &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        gaming_colemak {
// ----------------------------------------------------------------------------------------------------
// |        |   Q   |   W   |   F   |   P   |   B   | # |   J   |   L   |   U   |   Y   |   '   |     |
// | LAYERS |   A   |   R   |   S   |   T   |   G   | # |   M   |   N   |   E   |   I   |   O   |     |
// |        |   Z   |   X   |   C   |   D   |   V   | # |   K   |   H   |   ,   |   .   |   /   |     |
//                          |  ESC  | SPACE |  TAB  | # | ENTER | BSPC  |  DEL  |

            bindings = <
&trans      &kp Q  &kp W  &kp K    &kp S      &lt LAYERS F   &kp O      &kp I     &kp L     &kp SEMI  &kp R     &trans
&mo LAYERS  &kp A  &kp D  &kp V    &kp E      &kp G          &kp M      &kp Y     &kp N     &kp U     &kp SQT   &trans
&trans      &kp Z  &kp X  &kp C    &kp B      &kp T          &kp J      &kp H     &kp COMMA  &kp DOT   &kp FSLH  &trans
                          &kp ESC  &kp SPACE  &kp TAB        &kp ENTER  &kp BSPC  &kp DEL
            >;
        };

        layers {
// ---------------------------------------------------------------------------------------------
// | bootloader | bootloader |     |     |     | HELD | # |     |     |         |                | bootloader | bootloader |
// |    HELD    |            |     |     |     |      | # |     |     | COLEMAK | GAMING_COLEMAK |            |            |
// |            |            |     |     |     |      | # |     |     | QWERTY  | GAMING_QWERTY  |            |            |
//                                 |     |     |      | # |     |     |         |

            bindings = <
&bootloader  &bootloader  &trans  &trans  &trans  &trans          &trans  &trans  &trans       &trans              &bootloader  &bootloader
&sys_reset   &sys_reset   &trans  &trans  &trans  &trans          &trans  &trans  &to COLEMAK  &to GAMING_COLEMAK  &sys_reset   &sys_reset
&trans       &trans       &trans  &trans  &trans  &trans          &trans  &trans  &to QWERTY   &to GAMING_QWERTY   &trans       &trans
                                  &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };


        navigation {
// -------------------------------------------------------------------------------------------
// |     |      | move_win |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
// |     | LGUI |   LALT   | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
// |     |      |   RALT   |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
//                         |       | HELD  |     | # | ENTER | BSPC | DEL  |

            bindings = <
&trans  &trans    &move_win  &trans     &trans     &trans        &kp K_REDO    &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans
&trans  &kp LGUI  &kp LALT   &kp LCTRL  &kp LSHFT  &trans        &kp CAPSLOCK  &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT   &trans
&trans  &trans    &kp RALT   &trans     &trans     &trans        &kp INS       &kp HOME   &kp PG_DN   &kp PG_UP    &kp END     &trans
                             &trans     &trans     &trans        &kp ENTER     &kp BSPC   &kp DEL
            >;
        };

// TODO
// Add mouse keys when implemented in ZMK

        mouse {
// ------------------------------------------------------------------------------------
// |     |      |      |       |       |      | # |     |     |     |     |     |     |
// |     | LGUI | LALT | LCTRL | LSHFT |      | # |     |     |     |     |     |     |
// |     |      | RALT |       |       |      | # |     |     |     |     |     |     |
//                     |       |       | HELD | # |     |     |     |

            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans        &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &kp SPACE  &trans        &trans  &trans  &trans
            >;
        };

        media {
// -----------------------------------------------------------------------------------------------------
// |     |      |      |       |       |      | # | BOOTLOAD | EP_OFF | BR_D   | BR_U   | EP_ON  |     |
// |     | LGUI | LALT | LCTRL | LSHFT |      | # | RESET    | PREV   | VOL_D  | VOL_U  | NEXT   |     |
// |     |      | RALT |       |       |      | # | OUT_BLE  | BT_0   | BT_PRV | BT_NXT | BT_CLR |     |
//                     | HELD  |       |      | # | STOP     | PLAY   | MUTE   |

            bindings = <
&trans  &trans        &trans        &trans           &trans           &trans             &trans        &ext_power EP_OFF  &kp C_BRI_DN  &kp C_BRI_UP  &ext_power EP_ON  &trans
&trans  &kp LGUI      &kp LALT      &kp LCTRL        &kp LSHFT        &trans             &trans        &kp C_PREV         &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT        &trans
&trans  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &trans             &out OUT_BLE  &bt BT_SEL 0       &bt BT_PRV    &bt BT_NXT    &bt BT_CLR        &trans
                                    &trans           &kp SPACE        &trans             &kp C_STOP    &kp C_PLAY         &kp C_MUTE
            >;
        };

        numbers {
// -----------------------------------------------------------------------------------
// |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
// |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  `  |  1  |  2  |  3  |  \  | # |     |   X   |       | RALT |      |     |
//                   |  .  |  0  |  -  | # |     | HELD  |       |

            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SQT    &kp N4  &kp N5   &kp N6  &kp EQUAL        &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH         &trans  &kp X      &trans     &kp RALT  &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS        &trans  &trans     &trans
            >;
        };

        symbols {
// ------------------------------------------------------------------------------------
// |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
// |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     |
//                   |  (  |  )  |  _  | # | HELD |       |       |

            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC              &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp DQT    &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS              &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE              &trans  &trans     &trans     &kp RALT  &trans    &trans
                             &kp LPAR   &kp RPAR   &kp UNDERSCORE        &trans  &trans     &trans
            >;
        };

        function {
// ------------------------------------------------------------------------------------------
// |     |  F12 |  F7  |  F8  |  F9   | PSCRN | # |     |       |       |      |      |     |
// |     |  F11 |  F4  |  F5  |  F6   | SLCK  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
// |     |  F10 |  F1  |  F2  |  F3   | PAUSE | # |     |       |   X   | RALT |      |     |
//                     | ESC  | SPACE |  TAB  | # |     |       | HELD  |

            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PSCRN              &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &kp SLCK               &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &kp PAUSE_BREAK        &trans  &trans     &trans     &kp RALT  &trans    &trans
                         &kp ESC  &kp SPACE  &kp TAB                &trans  &trans     &trans
            >;
        };

        MACRO {
// ------------------------------------------------------------------------------------------------------------
// |     | QT WH | FR WH |           |       |      | # |     |      |          |         | fact print |     |
// |     | QT SH | FR SH |           |       |      | # |     |      |          |         |            |     |
// |     |       |       | tri_close |       |      | # |     | HELD | ft_proc  | ft_edit |            |     |
//                       |           |       |      | # |     |      |          |

                        bindings = <
    &trans  &print_wq  &print_wf  &trans          &trans           &trans           &trans  &trans  &trans    &trans    &ft_print  &trans 
    &trans  &print_sq  &print_sf  &trans          &trans           &trans           &trans  &trans  &trans    &trans    &trans     &trans 
    &trans  &trans     &trans     &ft_tri_close   &trans           &trans           &trans  &trans  &ft_proc  &ft_edit  &trans     &trans 
                                  &onenote_paste  &ft_a4_scrn_sht  &screen_sht      &trans  &trans  &trans                                
                                        	        
                        >;
                };
    };
};
